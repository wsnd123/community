<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.UserMapper">
    <sql id="selectFields">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <sql id="insertFields">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>
    <!--
        id：写的是方法名，告诉它执行的哪一个方法
        resultType：执行方法所返回的类型
    -->
    <select id="selectById" resultType="User">
        select id, username, password, salt, email, type, status, activation_code, header_url, create_time
        from user
        where id = #{id}
    </select>

    <select id="selectByName" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where username = #{username}
        limit 1
    </select>

    <select id="selectByEmail" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where email = #{email}
        limit 1
    </select>

    <!--
        parameterType：声明参数的类型，复杂的参数类型需要声明，Java自带的基本数据类型可以不用声明
        keyProperty：主键属性 MySQL底层会自动生成一个id，mybatis会从MySQL中得到这个id填入到User中，Uesr中是没有的，所以要声明
    -->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
        values (#{username},#{password},#{salt},#{email},#{type},#{status},#{activationCode},#{headerUrl},#{createTime});
    </insert>
    
    <update id="updateStatus" >
        update user set status = #{status} where id = #{id}
    </update>

    <update id="updateHeader" >
        update user set header_url = #{headerUrl} where id = #{id}
    </update>

    <update id="updatePassword" >
        update user set password = #{password} where id = #{id}
    </update>
</mapper>